[{"/Users/RaymondChu/shopify-coding-challenge2021/src/index.js":"1","/Users/RaymondChu/shopify-coding-challenge2021/src/reportWebVitals.js":"2","/Users/RaymondChu/shopify-coding-challenge2021/src/App.js":"3","/Users/RaymondChu/shopify-coding-challenge2021/src/components/Appbar.js":"4","/Users/RaymondChu/shopify-coding-challenge2021/src/components/Searchbar.js":"5","/Users/RaymondChu/shopify-coding-challenge2021/src/components/NominationsList.js":"6","/Users/RaymondChu/shopify-coding-challenge2021/src/components/MoviesList.js":"7","/Users/RaymondChu/shopify-coding-challenge2021/src/components/MovieListItem.js":"8","/Users/RaymondChu/shopify-coding-challenge2021/src/components/NominationsListItem.js":"9"},{"size":501,"mtime":1610838566586,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610836588970,"results":"12","hashOfConfig":"11"},{"size":2978,"mtime":1610920038706,"results":"13","hashOfConfig":"11"},{"size":770,"mtime":1610915669555,"results":"14","hashOfConfig":"11"},{"size":715,"mtime":1610913729683,"results":"15","hashOfConfig":"11"},{"size":1598,"mtime":1610915031541,"results":"16","hashOfConfig":"11"},{"size":2738,"mtime":1610916324659,"results":"17","hashOfConfig":"11"},{"size":386,"mtime":1610869545815,"results":"18","hashOfConfig":"11"},{"size":532,"mtime":1610908711506,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"7e5njq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/RaymondChu/shopify-coding-challenge2021/src/index.js",[],["41","42"],"/Users/RaymondChu/shopify-coding-challenge2021/src/reportWebVitals.js",[],"/Users/RaymondChu/shopify-coding-challenge2021/src/App.js",[],"/Users/RaymondChu/shopify-coding-challenge2021/src/components/Appbar.js",["43"],"import React from 'react';\nimport Searchbar from './Searchbar';\nimport trophy from '../images/trophy.png';\n\nimport './Appbar.scss';\n\nexport default function Appbar(props) {\n    return (\n        <div className=\"appbar-container\">\n            <div className=\"appbar-inner-container\">\n                <div className=\"logo-container\">\n                    <h1 className=\"logo\">The Shoppies</h1>\n                    <img src={trophy} style={{width: '50px'}}/>\n                </div>\n                <div className=\"searchbar\">\n                    <Searchbar movie={props.movie} setMovie={props.setMovie} handleSearch={props.handleSearch} />\n                </div>\n                <div className=\"empty\">&emsp;&emsp;&emsp;&emsp;</div>\n            </div>\n\n        </div>\n    )\n}","/Users/RaymondChu/shopify-coding-challenge2021/src/components/Searchbar.js",[],"/Users/RaymondChu/shopify-coding-challenge2021/src/components/NominationsList.js",[],"/Users/RaymondChu/shopify-coding-challenge2021/src/components/MoviesList.js",["44","45","46"],"import React, { useState, useEffect } from 'react';\nimport MovieListItem from './MovieListItem';\nimport loading from '../images/status.png';\n\nimport \"./MovieList.scss\";\n\nexport default function MoviesList(props) {\n    function handleNomination(movie) {\n        //checks if nominations list is already at 10 movies\n        if (props.nominationsList.length >= 10) {\n            props.setNominationError(\"Nominations list is full! Remove some before you add any more!\")\n            setTimeout(() => {\n                props.setNominationError(\"\");\n            }, 2000);\n        }\n        //check if the movie is already in the nominations list\n        else if (props.nominationsList.map(nom => nom.imdbID).indexOf(`${movie.imdbID}`) > -1) {\n            props.setNominationError(`${movie.Title} is already in your nominations list!`);\n            setTimeout(() => {\n                props.setNominationError(\"\");\n            }, 3000);\n        }\n        //else add the movie to the nominations list\n        else {\n            props.setNominationsList([...props.nominationsList, movie]);\n            props.setAddedNotification(`${movie.Title} was added successfully!`);\n            setTimeout(() => {\n                props.setAddedNotification(\"\");\n            }, 3000);\n        }\n    }\n\n    return (\n        <div className=\"movielist-outer-container\">\n            <p className=\"movies-subtitle\">\n                Movies\n            </p>\n            { !props.error && \n                <div className=\"movieList-container\">\n                    {props.movieList.map((movie) => (\n                        <div key={movie.imdbID} className=\"movies-list-item\">\n                            <MovieListItem \n                                title={movie.Title}\n                                year={movie.Year}\n                                poster={movie.Poster}\n                                setNominationsList={props.setNominationsList}\n                            />\n                            <button onClick={() => handleNomination(movie)} className=\"nominations-btn\">\n                                Nominate!\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            }  \n\n            { props.error && \n                <div className=\"no-results-container\">\n                    <span className=\"loading-text\">No Movies Found! :( </span>\n                </div>\n            }\n\n            {\n                props.searching &&\n                <div className=\"loading-container\">\n                    <img src={loading} className=\"loading-movies\" />\n                    <span className=\"loading-text\">Searching ...</span>\n                </div>\n            }\n        </div>\n    )\n}","/Users/RaymondChu/shopify-coding-challenge2021/src/components/MovieListItem.js",[],"/Users/RaymondChu/shopify-coding-challenge2021/src/components/NominationsListItem.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":13,"column":21,"nodeType":"53","endLine":13,"endColumn":64},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":65,"column":21,"nodeType":"53","endLine":65,"endColumn":69},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]